//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace Taskr.Silverlight.TaskrServices.Admin {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="Apprenda.Taskr")]
    public partial class Tag : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        private string LabelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Apprenda.Taskr.Service", ConfigurationName="TaskrServices.Admin.TaskrAdmin")]
    public interface TaskrAdmin {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Apprenda.Taskr.Service.SaveTag", ReplyAction="urn:Apprenda.Taskr.Service.SaveTagReply")]
        [System.ServiceModel.FaultContractAttribute(typeof(Apprenda.SaaSGrid.NotAuthorizedDetail), Action="urn:Apprenda.SaaSGrid.Fault", Name="NotAuthorizedDetail", Namespace="urn:Apprenda.SaaSGrid")]
        System.IAsyncResult BeginSaveTag(Taskr.Silverlight.TaskrServices.Admin.Tag tag, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndSaveTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Apprenda.Taskr.Service.DeleteTag", ReplyAction="urn:Apprenda.Taskr.Service.DeleteTagReply")]
        [System.ServiceModel.FaultContractAttribute(typeof(Apprenda.SaaSGrid.NotAuthorizedDetail), Action="urn:Apprenda.SaaSGrid.Fault", Name="NotAuthorizedDetail", Namespace="urn:Apprenda.SaaSGrid")]
        System.IAsyncResult BeginDeleteTag(System.Guid tagId, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Apprenda.Taskr.Service.ListTags", ReplyAction="urn:Apprenda.Taskr.Service.ListTagsReply")]
        System.IAsyncResult BeginListTags(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag> EndListTags(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface TaskrAdminChannel : Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SaveTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DeleteTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class TaskrAdminClient : System.ServiceModel.ClientBase<Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin>, Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin {
        
        private BeginOperationDelegate onBeginSaveTagDelegate;
        
        private EndOperationDelegate onEndSaveTagDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTagDelegate;
        
        private EndOperationDelegate onEndDeleteTagDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTagsDelegate;
        
        private EndOperationDelegate onEndListTagsDelegate;
        
        private System.Threading.SendOrPostCallback onListTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TaskrAdminClient() {
        }
        
        public TaskrAdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskrAdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskrAdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskrAdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SaveTagCompletedEventArgs> SaveTagCompleted;
        
        public event System.EventHandler<DeleteTagCompletedEventArgs> DeleteTagCompleted;
        
        public event System.EventHandler<ListTagsCompletedEventArgs> ListTagsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin.BeginSaveTag(Taskr.Silverlight.TaskrServices.Admin.Tag tag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTag(tag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Guid Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin.EndSaveTag(System.IAsyncResult result) {
            return base.Channel.EndSaveTag(result);
        }
        
        private System.IAsyncResult OnBeginSaveTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Taskr.Silverlight.TaskrServices.Admin.Tag tag = ((Taskr.Silverlight.TaskrServices.Admin.Tag)(inValues[0]));
            return ((Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin)(this)).BeginSaveTag(tag, callback, asyncState);
        }
        
        private object[] OnEndSaveTag(System.IAsyncResult result) {
            System.Guid retVal = ((Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin)(this)).EndSaveTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTagCompleted(object state) {
            if ((this.SaveTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTagCompleted(this, new SaveTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTagAsync(Taskr.Silverlight.TaskrServices.Admin.Tag tag) {
            this.SaveTagAsync(tag, null);
        }
        
        public void SaveTagAsync(Taskr.Silverlight.TaskrServices.Admin.Tag tag, object userState) {
            if ((this.onBeginSaveTagDelegate == null)) {
                this.onBeginSaveTagDelegate = new BeginOperationDelegate(this.OnBeginSaveTag);
            }
            if ((this.onEndSaveTagDelegate == null)) {
                this.onEndSaveTagDelegate = new EndOperationDelegate(this.OnEndSaveTag);
            }
            if ((this.onSaveTagCompletedDelegate == null)) {
                this.onSaveTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTagCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTagDelegate, new object[] {
                        tag}, this.onEndSaveTagDelegate, this.onSaveTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin.BeginDeleteTag(System.Guid tagId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTag(tagId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin.EndDeleteTag(System.IAsyncResult result) {
            return base.Channel.EndDeleteTag(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid tagId = ((System.Guid)(inValues[0]));
            return ((Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin)(this)).BeginDeleteTag(tagId, callback, asyncState);
        }
        
        private object[] OnEndDeleteTag(System.IAsyncResult result) {
            bool retVal = ((Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin)(this)).EndDeleteTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTagCompleted(object state) {
            if ((this.DeleteTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTagCompleted(this, new DeleteTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTagAsync(System.Guid tagId) {
            this.DeleteTagAsync(tagId, null);
        }
        
        public void DeleteTagAsync(System.Guid tagId, object userState) {
            if ((this.onBeginDeleteTagDelegate == null)) {
                this.onBeginDeleteTagDelegate = new BeginOperationDelegate(this.OnBeginDeleteTag);
            }
            if ((this.onEndDeleteTagDelegate == null)) {
                this.onEndDeleteTagDelegate = new EndOperationDelegate(this.OnEndDeleteTag);
            }
            if ((this.onDeleteTagCompletedDelegate == null)) {
                this.onDeleteTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTagCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTagDelegate, new object[] {
                        tagId}, this.onEndDeleteTagDelegate, this.onDeleteTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin.BeginListTags(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTags(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag> Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin.EndListTags(System.IAsyncResult result) {
            return base.Channel.EndListTags(result);
        }
        
        private System.IAsyncResult OnBeginListTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin)(this)).BeginListTags(callback, asyncState);
        }
        
        private object[] OnEndListTags(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag> retVal = ((Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin)(this)).EndListTags(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTagsCompleted(object state) {
            if ((this.ListTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTagsCompleted(this, new ListTagsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTagsAsync() {
            this.ListTagsAsync(null);
        }
        
        public void ListTagsAsync(object userState) {
            if ((this.onBeginListTagsDelegate == null)) {
                this.onBeginListTagsDelegate = new BeginOperationDelegate(this.OnBeginListTags);
            }
            if ((this.onEndListTagsDelegate == null)) {
                this.onEndListTagsDelegate = new EndOperationDelegate(this.OnEndListTags);
            }
            if ((this.onListTagsCompletedDelegate == null)) {
                this.onListTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTagsCompleted);
            }
            base.InvokeAsync(this.onBeginListTagsDelegate, null, this.onEndListTagsDelegate, this.onListTagsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin CreateChannel() {
            return new TaskrAdminClientChannel(this);
        }
        
        private class TaskrAdminClientChannel : ChannelBase<Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin>, Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin {
            
            public TaskrAdminClientChannel(System.ServiceModel.ClientBase<Taskr.Silverlight.TaskrServices.Admin.TaskrAdmin> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveTag(Taskr.Silverlight.TaskrServices.Admin.Tag tag, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tag;
                System.IAsyncResult _result = base.BeginInvoke("SaveTag", _args, callback, asyncState);
                return _result;
            }
            
            public System.Guid EndSaveTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Guid _result = ((System.Guid)(base.EndInvoke("SaveTag", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTag(System.Guid tagId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tagId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTag", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteTag", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListTags(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListTags", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag> EndListTags(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag> _result = ((System.Collections.ObjectModel.ObservableCollection<Taskr.Silverlight.TaskrServices.Admin.Tag>)(base.EndInvoke("ListTags", _args, result)));
                return _result;
            }
        }
    }
}
